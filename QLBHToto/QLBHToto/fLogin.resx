<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>