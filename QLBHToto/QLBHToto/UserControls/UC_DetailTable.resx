<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btn_Mvtb.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGQAAABkCAYAAABw4pVUAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAAArlJREFUeF7tnT1rFFEYRhcEK0GwswmKtZWt/8Dayl5Rwdp/oJ2dnZ2CaGsKEUSw
        sPEDBLFQBLGwsNFG/Cj0uQuLz8ze4WZ2Z+68Zs6B0+yThJk5G9hsNpsFAAAAAAAAAAAAAAAAAAAAwFw5
        IE/NwMMyPCnGXflnBr6UR2RY5hRjZdgoc4yxMlyUrhif5fN96AfZPtcwUbpivJVH5X7koNyV7XOePMoc
        Y6wIF2XOMVaEiUKMf0wehRjrTBaFGN1Uj0KMMtWiEGPvjB6FGP0ZLQoxNqcrygu5URRibM9gUYgxHFtH
        IcbwbByFGOPROwoxxmfPUbpi/JRX5FkczHMy/Z6ofa0bUXIxsL7p55TlCydyI07jaZkdcBrXgvyS97Ca
        X6Rf/7UgX9MNUI2n0q8/QSaGIMEgSDAIEoxikO/yvHlRXmjd1sdLmdsiezlzWx/7nu876dd/LQhOK0GC
        SZBgLoNcz3hD+gf+kL7flL5/k77fkr5/kr7flr6/l77X9pn043kifU9P/Pn+UPr+Rvp+X/qezs/3dP6+
        rzwms6RnHf0LtB997UjfP0rnpPQ9PZpw0j3B9wdySq5JP56r0mnfAdODHeeO9P2MdNL5+b78TugDQZoQ
        pDIEkb4TpABBmhCkMgSRvhOkAEGaEKQyBJG+E6QAQZoQpDIEkb4TpABBmhCkMgSRvhOkAEGaEKQyBJG+
        E6QAQZoQpDIEkb4TpABBmhCkMgSRvhOkwNBB0t/S+d/WPZa+RwvyWvrxtl95+N8HKRktSEmCjAxBWhKk
        wLZB0ufn3uujy94HODDpDpQ7ri5PSCd8kLlBkGAQJBgECQZBgkGQYBAkGAQJBkGCUT3Ib/nITE+n+06Q
        5vV4Jf16Zd85rg/tICUJkr8uXRJkZAgSjNGDpHe7zv2H5C7Ts6Vz5rjMXZcuD8kMi8VfEmisXXfrxGEA
        AAAASUVORK5CYII=
</value>
  </data>
  <data name="btn_back.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        LR1gHAAAAABJRU5ErkJggg==
</value>
  </data>
</root>